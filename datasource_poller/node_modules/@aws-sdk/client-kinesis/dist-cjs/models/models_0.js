"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnableEnhancedMonitoringInputFilterSensitiveLog = exports.EnhancedMonitoringOutputFilterSensitiveLog = exports.DisableEnhancedMonitoringInputFilterSensitiveLog = exports.DescribeStreamSummaryOutputFilterSensitiveLog = exports.StreamDescriptionSummaryFilterSensitiveLog = exports.DescribeStreamSummaryInputFilterSensitiveLog = exports.DescribeStreamConsumerOutputFilterSensitiveLog = exports.DescribeStreamConsumerInputFilterSensitiveLog = exports.DescribeStreamOutputFilterSensitiveLog = exports.StreamDescriptionFilterSensitiveLog = exports.ShardFilterSensitiveLog = exports.SequenceNumberRangeFilterSensitiveLog = exports.EnhancedMetricsFilterSensitiveLog = exports.DescribeStreamInputFilterSensitiveLog = exports.DescribeLimitsOutputFilterSensitiveLog = exports.DescribeLimitsInputFilterSensitiveLog = exports.DeregisterStreamConsumerInputFilterSensitiveLog = exports.DeleteStreamInputFilterSensitiveLog = exports.DecreaseStreamRetentionPeriodInputFilterSensitiveLog = exports.CreateStreamInputFilterSensitiveLog = exports.StreamModeDetailsFilterSensitiveLog = exports.ConsumerDescriptionFilterSensitiveLog = exports.ConsumerFilterSensitiveLog = exports.ChildShardFilterSensitiveLog = exports.HashKeyRangeFilterSensitiveLog = exports.AddTagsToStreamInputFilterSensitiveLog = exports.ScalingType = exports.SubscribeToShardEventStream = exports.ValidationException = exports.ShardFilterType = exports.InternalFailureException = exports.ShardIteratorType = exports.ProvisionedThroughputExceededException = exports.KMSThrottlingException = exports.KMSOptInRequired = exports.KMSNotFoundException = exports.KMSInvalidStateException = exports.KMSDisabledException = exports.KMSAccessDeniedException = exports.ExpiredNextTokenException = exports.ExpiredIteratorException = exports.StreamStatus = exports.MetricsName = exports.EncryptionType = exports.StreamMode = exports.ConsumerStatus = exports.ResourceNotFoundException = exports.ResourceInUseException = exports.LimitExceededException = exports.InvalidArgumentException = void 0;
exports.UpdateStreamModeInputFilterSensitiveLog = exports.UpdateShardCountOutputFilterSensitiveLog = exports.UpdateShardCountInputFilterSensitiveLog = exports.SubscribeToShardOutputFilterSensitiveLog = exports.SubscribeToShardEventStreamFilterSensitiveLog = exports.SubscribeToShardEventFilterSensitiveLog = exports.SubscribeToShardInputFilterSensitiveLog = exports.StartingPositionFilterSensitiveLog = exports.StopStreamEncryptionInputFilterSensitiveLog = exports.StartStreamEncryptionInputFilterSensitiveLog = exports.SplitShardInputFilterSensitiveLog = exports.RemoveTagsFromStreamInputFilterSensitiveLog = exports.RegisterStreamConsumerOutputFilterSensitiveLog = exports.RegisterStreamConsumerInputFilterSensitiveLog = exports.PutRecordsOutputFilterSensitiveLog = exports.PutRecordsResultEntryFilterSensitiveLog = exports.PutRecordsInputFilterSensitiveLog = exports.PutRecordsRequestEntryFilterSensitiveLog = exports.PutRecordOutputFilterSensitiveLog = exports.PutRecordInputFilterSensitiveLog = exports.MergeShardsInputFilterSensitiveLog = exports.ListTagsForStreamOutputFilterSensitiveLog = exports.TagFilterSensitiveLog = exports.ListTagsForStreamInputFilterSensitiveLog = exports.ListStreamsOutputFilterSensitiveLog = exports.ListStreamsInputFilterSensitiveLog = exports.ListStreamConsumersOutputFilterSensitiveLog = exports.ListStreamConsumersInputFilterSensitiveLog = exports.ListShardsOutputFilterSensitiveLog = exports.ListShardsInputFilterSensitiveLog = exports.ShardFilterFilterSensitiveLog = exports.IncreaseStreamRetentionPeriodInputFilterSensitiveLog = exports.GetShardIteratorOutputFilterSensitiveLog = exports.GetShardIteratorInputFilterSensitiveLog = exports.GetRecordsOutputFilterSensitiveLog = exports._RecordFilterSensitiveLog = exports.GetRecordsInputFilterSensitiveLog = void 0;
const KinesisServiceException_1 = require("./KinesisServiceException");
class InvalidArgumentException extends KinesisServiceException_1.KinesisServiceException {
    constructor(opts) {
        super({
            name: "InvalidArgumentException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidArgumentException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidArgumentException.prototype);
    }
}
exports.InvalidArgumentException = InvalidArgumentException;
class LimitExceededException extends KinesisServiceException_1.KinesisServiceException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
exports.LimitExceededException = LimitExceededException;
class ResourceInUseException extends KinesisServiceException_1.KinesisServiceException {
    constructor(opts) {
        super({
            name: "ResourceInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceInUseException.prototype);
    }
}
exports.ResourceInUseException = ResourceInUseException;
class ResourceNotFoundException extends KinesisServiceException_1.KinesisServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
exports.ResourceNotFoundException = ResourceNotFoundException;
var ConsumerStatus;
(function (ConsumerStatus) {
    ConsumerStatus["ACTIVE"] = "ACTIVE";
    ConsumerStatus["CREATING"] = "CREATING";
    ConsumerStatus["DELETING"] = "DELETING";
})(ConsumerStatus = exports.ConsumerStatus || (exports.ConsumerStatus = {}));
var StreamMode;
(function (StreamMode) {
    StreamMode["ON_DEMAND"] = "ON_DEMAND";
    StreamMode["PROVISIONED"] = "PROVISIONED";
})(StreamMode = exports.StreamMode || (exports.StreamMode = {}));
var EncryptionType;
(function (EncryptionType) {
    EncryptionType["KMS"] = "KMS";
    EncryptionType["NONE"] = "NONE";
})(EncryptionType = exports.EncryptionType || (exports.EncryptionType = {}));
var MetricsName;
(function (MetricsName) {
    MetricsName["ALL"] = "ALL";
    MetricsName["INCOMING_BYTES"] = "IncomingBytes";
    MetricsName["INCOMING_RECORDS"] = "IncomingRecords";
    MetricsName["ITERATOR_AGE_MILLISECONDS"] = "IteratorAgeMilliseconds";
    MetricsName["OUTGOING_BYTES"] = "OutgoingBytes";
    MetricsName["OUTGOING_RECORDS"] = "OutgoingRecords";
    MetricsName["READ_PROVISIONED_THROUGHPUT_EXCEEDED"] = "ReadProvisionedThroughputExceeded";
    MetricsName["WRITE_PROVISIONED_THROUGHPUT_EXCEEDED"] = "WriteProvisionedThroughputExceeded";
})(MetricsName = exports.MetricsName || (exports.MetricsName = {}));
var StreamStatus;
(function (StreamStatus) {
    StreamStatus["ACTIVE"] = "ACTIVE";
    StreamStatus["CREATING"] = "CREATING";
    StreamStatus["DELETING"] = "DELETING";
    StreamStatus["UPDATING"] = "UPDATING";
})(StreamStatus = exports.StreamStatus || (exports.StreamStatus = {}));
class ExpiredIteratorException extends KinesisServiceException_1.KinesisServiceException {
    constructor(opts) {
        super({
            name: "ExpiredIteratorException",
            $fault: "client",
            ...opts,
        });
        this.name = "ExpiredIteratorException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExpiredIteratorException.prototype);
    }
}
exports.ExpiredIteratorException = ExpiredIteratorException;
class ExpiredNextTokenException extends KinesisServiceException_1.KinesisServiceException {
    constructor(opts) {
        super({
            name: "ExpiredNextTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "ExpiredNextTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExpiredNextTokenException.prototype);
    }
}
exports.ExpiredNextTokenException = ExpiredNextTokenException;
class KMSAccessDeniedException extends KinesisServiceException_1.KinesisServiceException {
    constructor(opts) {
        super({
            name: "KMSAccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSAccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSAccessDeniedException.prototype);
    }
}
exports.KMSAccessDeniedException = KMSAccessDeniedException;
class KMSDisabledException extends KinesisServiceException_1.KinesisServiceException {
    constructor(opts) {
        super({
            name: "KMSDisabledException",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSDisabledException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSDisabledException.prototype);
    }
}
exports.KMSDisabledException = KMSDisabledException;
class KMSInvalidStateException extends KinesisServiceException_1.KinesisServiceException {
    constructor(opts) {
        super({
            name: "KMSInvalidStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSInvalidStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSInvalidStateException.prototype);
    }
}
exports.KMSInvalidStateException = KMSInvalidStateException;
class KMSNotFoundException extends KinesisServiceException_1.KinesisServiceException {
    constructor(opts) {
        super({
            name: "KMSNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSNotFoundException.prototype);
    }
}
exports.KMSNotFoundException = KMSNotFoundException;
class KMSOptInRequired extends KinesisServiceException_1.KinesisServiceException {
    constructor(opts) {
        super({
            name: "KMSOptInRequired",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSOptInRequired";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSOptInRequired.prototype);
    }
}
exports.KMSOptInRequired = KMSOptInRequired;
class KMSThrottlingException extends KinesisServiceException_1.KinesisServiceException {
    constructor(opts) {
        super({
            name: "KMSThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSThrottlingException.prototype);
    }
}
exports.KMSThrottlingException = KMSThrottlingException;
class ProvisionedThroughputExceededException extends KinesisServiceException_1.KinesisServiceException {
    constructor(opts) {
        super({
            name: "ProvisionedThroughputExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ProvisionedThroughputExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ProvisionedThroughputExceededException.prototype);
    }
}
exports.ProvisionedThroughputExceededException = ProvisionedThroughputExceededException;
var ShardIteratorType;
(function (ShardIteratorType) {
    ShardIteratorType["AFTER_SEQUENCE_NUMBER"] = "AFTER_SEQUENCE_NUMBER";
    ShardIteratorType["AT_SEQUENCE_NUMBER"] = "AT_SEQUENCE_NUMBER";
    ShardIteratorType["AT_TIMESTAMP"] = "AT_TIMESTAMP";
    ShardIteratorType["LATEST"] = "LATEST";
    ShardIteratorType["TRIM_HORIZON"] = "TRIM_HORIZON";
})(ShardIteratorType = exports.ShardIteratorType || (exports.ShardIteratorType = {}));
class InternalFailureException extends KinesisServiceException_1.KinesisServiceException {
    constructor(opts) {
        super({
            name: "InternalFailureException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalFailureException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalFailureException.prototype);
    }
}
exports.InternalFailureException = InternalFailureException;
var ShardFilterType;
(function (ShardFilterType) {
    ShardFilterType["AFTER_SHARD_ID"] = "AFTER_SHARD_ID";
    ShardFilterType["AT_LATEST"] = "AT_LATEST";
    ShardFilterType["AT_TIMESTAMP"] = "AT_TIMESTAMP";
    ShardFilterType["AT_TRIM_HORIZON"] = "AT_TRIM_HORIZON";
    ShardFilterType["FROM_TIMESTAMP"] = "FROM_TIMESTAMP";
    ShardFilterType["FROM_TRIM_HORIZON"] = "FROM_TRIM_HORIZON";
})(ShardFilterType = exports.ShardFilterType || (exports.ShardFilterType = {}));
class ValidationException extends KinesisServiceException_1.KinesisServiceException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
exports.ValidationException = ValidationException;
var SubscribeToShardEventStream;
(function (SubscribeToShardEventStream) {
    SubscribeToShardEventStream.visit = (value, visitor) => {
        if (value.SubscribeToShardEvent !== undefined)
            return visitor.SubscribeToShardEvent(value.SubscribeToShardEvent);
        if (value.ResourceNotFoundException !== undefined)
            return visitor.ResourceNotFoundException(value.ResourceNotFoundException);
        if (value.ResourceInUseException !== undefined)
            return visitor.ResourceInUseException(value.ResourceInUseException);
        if (value.KMSDisabledException !== undefined)
            return visitor.KMSDisabledException(value.KMSDisabledException);
        if (value.KMSInvalidStateException !== undefined)
            return visitor.KMSInvalidStateException(value.KMSInvalidStateException);
        if (value.KMSAccessDeniedException !== undefined)
            return visitor.KMSAccessDeniedException(value.KMSAccessDeniedException);
        if (value.KMSNotFoundException !== undefined)
            return visitor.KMSNotFoundException(value.KMSNotFoundException);
        if (value.KMSOptInRequired !== undefined)
            return visitor.KMSOptInRequired(value.KMSOptInRequired);
        if (value.KMSThrottlingException !== undefined)
            return visitor.KMSThrottlingException(value.KMSThrottlingException);
        if (value.InternalFailureException !== undefined)
            return visitor.InternalFailureException(value.InternalFailureException);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(SubscribeToShardEventStream = exports.SubscribeToShardEventStream || (exports.SubscribeToShardEventStream = {}));
var ScalingType;
(function (ScalingType) {
    ScalingType["UNIFORM_SCALING"] = "UNIFORM_SCALING";
})(ScalingType = exports.ScalingType || (exports.ScalingType = {}));
const AddTagsToStreamInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddTagsToStreamInputFilterSensitiveLog = AddTagsToStreamInputFilterSensitiveLog;
const HashKeyRangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HashKeyRangeFilterSensitiveLog = HashKeyRangeFilterSensitiveLog;
const ChildShardFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ChildShardFilterSensitiveLog = ChildShardFilterSensitiveLog;
const ConsumerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ConsumerFilterSensitiveLog = ConsumerFilterSensitiveLog;
const ConsumerDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ConsumerDescriptionFilterSensitiveLog = ConsumerDescriptionFilterSensitiveLog;
const StreamModeDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StreamModeDetailsFilterSensitiveLog = StreamModeDetailsFilterSensitiveLog;
const CreateStreamInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateStreamInputFilterSensitiveLog = CreateStreamInputFilterSensitiveLog;
const DecreaseStreamRetentionPeriodInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DecreaseStreamRetentionPeriodInputFilterSensitiveLog = DecreaseStreamRetentionPeriodInputFilterSensitiveLog;
const DeleteStreamInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteStreamInputFilterSensitiveLog = DeleteStreamInputFilterSensitiveLog;
const DeregisterStreamConsumerInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeregisterStreamConsumerInputFilterSensitiveLog = DeregisterStreamConsumerInputFilterSensitiveLog;
const DescribeLimitsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeLimitsInputFilterSensitiveLog = DescribeLimitsInputFilterSensitiveLog;
const DescribeLimitsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeLimitsOutputFilterSensitiveLog = DescribeLimitsOutputFilterSensitiveLog;
const DescribeStreamInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeStreamInputFilterSensitiveLog = DescribeStreamInputFilterSensitiveLog;
const EnhancedMetricsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnhancedMetricsFilterSensitiveLog = EnhancedMetricsFilterSensitiveLog;
const SequenceNumberRangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SequenceNumberRangeFilterSensitiveLog = SequenceNumberRangeFilterSensitiveLog;
const ShardFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ShardFilterSensitiveLog = ShardFilterSensitiveLog;
const StreamDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StreamDescriptionFilterSensitiveLog = StreamDescriptionFilterSensitiveLog;
const DescribeStreamOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeStreamOutputFilterSensitiveLog = DescribeStreamOutputFilterSensitiveLog;
const DescribeStreamConsumerInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeStreamConsumerInputFilterSensitiveLog = DescribeStreamConsumerInputFilterSensitiveLog;
const DescribeStreamConsumerOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeStreamConsumerOutputFilterSensitiveLog = DescribeStreamConsumerOutputFilterSensitiveLog;
const DescribeStreamSummaryInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeStreamSummaryInputFilterSensitiveLog = DescribeStreamSummaryInputFilterSensitiveLog;
const StreamDescriptionSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StreamDescriptionSummaryFilterSensitiveLog = StreamDescriptionSummaryFilterSensitiveLog;
const DescribeStreamSummaryOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeStreamSummaryOutputFilterSensitiveLog = DescribeStreamSummaryOutputFilterSensitiveLog;
const DisableEnhancedMonitoringInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DisableEnhancedMonitoringInputFilterSensitiveLog = DisableEnhancedMonitoringInputFilterSensitiveLog;
const EnhancedMonitoringOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnhancedMonitoringOutputFilterSensitiveLog = EnhancedMonitoringOutputFilterSensitiveLog;
const EnableEnhancedMonitoringInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnableEnhancedMonitoringInputFilterSensitiveLog = EnableEnhancedMonitoringInputFilterSensitiveLog;
const GetRecordsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetRecordsInputFilterSensitiveLog = GetRecordsInputFilterSensitiveLog;
const _RecordFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports._RecordFilterSensitiveLog = _RecordFilterSensitiveLog;
const GetRecordsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetRecordsOutputFilterSensitiveLog = GetRecordsOutputFilterSensitiveLog;
const GetShardIteratorInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetShardIteratorInputFilterSensitiveLog = GetShardIteratorInputFilterSensitiveLog;
const GetShardIteratorOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetShardIteratorOutputFilterSensitiveLog = GetShardIteratorOutputFilterSensitiveLog;
const IncreaseStreamRetentionPeriodInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.IncreaseStreamRetentionPeriodInputFilterSensitiveLog = IncreaseStreamRetentionPeriodInputFilterSensitiveLog;
const ShardFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ShardFilterFilterSensitiveLog = ShardFilterFilterSensitiveLog;
const ListShardsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListShardsInputFilterSensitiveLog = ListShardsInputFilterSensitiveLog;
const ListShardsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListShardsOutputFilterSensitiveLog = ListShardsOutputFilterSensitiveLog;
const ListStreamConsumersInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListStreamConsumersInputFilterSensitiveLog = ListStreamConsumersInputFilterSensitiveLog;
const ListStreamConsumersOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListStreamConsumersOutputFilterSensitiveLog = ListStreamConsumersOutputFilterSensitiveLog;
const ListStreamsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListStreamsInputFilterSensitiveLog = ListStreamsInputFilterSensitiveLog;
const ListStreamsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListStreamsOutputFilterSensitiveLog = ListStreamsOutputFilterSensitiveLog;
const ListTagsForStreamInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTagsForStreamInputFilterSensitiveLog = ListTagsForStreamInputFilterSensitiveLog;
const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagFilterSensitiveLog = TagFilterSensitiveLog;
const ListTagsForStreamOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTagsForStreamOutputFilterSensitiveLog = ListTagsForStreamOutputFilterSensitiveLog;
const MergeShardsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MergeShardsInputFilterSensitiveLog = MergeShardsInputFilterSensitiveLog;
const PutRecordInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutRecordInputFilterSensitiveLog = PutRecordInputFilterSensitiveLog;
const PutRecordOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutRecordOutputFilterSensitiveLog = PutRecordOutputFilterSensitiveLog;
const PutRecordsRequestEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutRecordsRequestEntryFilterSensitiveLog = PutRecordsRequestEntryFilterSensitiveLog;
const PutRecordsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutRecordsInputFilterSensitiveLog = PutRecordsInputFilterSensitiveLog;
const PutRecordsResultEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutRecordsResultEntryFilterSensitiveLog = PutRecordsResultEntryFilterSensitiveLog;
const PutRecordsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutRecordsOutputFilterSensitiveLog = PutRecordsOutputFilterSensitiveLog;
const RegisterStreamConsumerInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RegisterStreamConsumerInputFilterSensitiveLog = RegisterStreamConsumerInputFilterSensitiveLog;
const RegisterStreamConsumerOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RegisterStreamConsumerOutputFilterSensitiveLog = RegisterStreamConsumerOutputFilterSensitiveLog;
const RemoveTagsFromStreamInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RemoveTagsFromStreamInputFilterSensitiveLog = RemoveTagsFromStreamInputFilterSensitiveLog;
const SplitShardInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SplitShardInputFilterSensitiveLog = SplitShardInputFilterSensitiveLog;
const StartStreamEncryptionInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StartStreamEncryptionInputFilterSensitiveLog = StartStreamEncryptionInputFilterSensitiveLog;
const StopStreamEncryptionInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StopStreamEncryptionInputFilterSensitiveLog = StopStreamEncryptionInputFilterSensitiveLog;
const StartingPositionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StartingPositionFilterSensitiveLog = StartingPositionFilterSensitiveLog;
const SubscribeToShardInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SubscribeToShardInputFilterSensitiveLog = SubscribeToShardInputFilterSensitiveLog;
const SubscribeToShardEventFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SubscribeToShardEventFilterSensitiveLog = SubscribeToShardEventFilterSensitiveLog;
const SubscribeToShardEventStreamFilterSensitiveLog = (obj) => {
    if (obj.SubscribeToShardEvent !== undefined)
        return { SubscribeToShardEvent: (0, exports.SubscribeToShardEventFilterSensitiveLog)(obj.SubscribeToShardEvent) };
    if (obj.ResourceNotFoundException !== undefined)
        return { ResourceNotFoundException: obj.ResourceNotFoundException };
    if (obj.ResourceInUseException !== undefined)
        return { ResourceInUseException: obj.ResourceInUseException };
    if (obj.KMSDisabledException !== undefined)
        return { KMSDisabledException: obj.KMSDisabledException };
    if (obj.KMSInvalidStateException !== undefined)
        return { KMSInvalidStateException: obj.KMSInvalidStateException };
    if (obj.KMSAccessDeniedException !== undefined)
        return { KMSAccessDeniedException: obj.KMSAccessDeniedException };
    if (obj.KMSNotFoundException !== undefined)
        return { KMSNotFoundException: obj.KMSNotFoundException };
    if (obj.KMSOptInRequired !== undefined)
        return { KMSOptInRequired: obj.KMSOptInRequired };
    if (obj.KMSThrottlingException !== undefined)
        return { KMSThrottlingException: obj.KMSThrottlingException };
    if (obj.InternalFailureException !== undefined)
        return { InternalFailureException: obj.InternalFailureException };
    if (obj.$unknown !== undefined)
        return { [obj.$unknown[0]]: "UNKNOWN" };
};
exports.SubscribeToShardEventStreamFilterSensitiveLog = SubscribeToShardEventStreamFilterSensitiveLog;
const SubscribeToShardOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EventStream && { EventStream: "STREAMING_CONTENT" }),
});
exports.SubscribeToShardOutputFilterSensitiveLog = SubscribeToShardOutputFilterSensitiveLog;
const UpdateShardCountInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateShardCountInputFilterSensitiveLog = UpdateShardCountInputFilterSensitiveLog;
const UpdateShardCountOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateShardCountOutputFilterSensitiveLog = UpdateShardCountOutputFilterSensitiveLog;
const UpdateStreamModeInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateStreamModeInputFilterSensitiveLog = UpdateStreamModeInputFilterSensitiveLog;
