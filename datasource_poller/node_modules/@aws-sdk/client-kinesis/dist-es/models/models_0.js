import { KinesisServiceException as __BaseException } from "./KinesisServiceException";
export class InvalidArgumentException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidArgumentException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidArgumentException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidArgumentException.prototype);
    }
}
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
export class ResourceInUseException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceInUseException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export var ConsumerStatus;
(function (ConsumerStatus) {
    ConsumerStatus["ACTIVE"] = "ACTIVE";
    ConsumerStatus["CREATING"] = "CREATING";
    ConsumerStatus["DELETING"] = "DELETING";
})(ConsumerStatus || (ConsumerStatus = {}));
export var StreamMode;
(function (StreamMode) {
    StreamMode["ON_DEMAND"] = "ON_DEMAND";
    StreamMode["PROVISIONED"] = "PROVISIONED";
})(StreamMode || (StreamMode = {}));
export var EncryptionType;
(function (EncryptionType) {
    EncryptionType["KMS"] = "KMS";
    EncryptionType["NONE"] = "NONE";
})(EncryptionType || (EncryptionType = {}));
export var MetricsName;
(function (MetricsName) {
    MetricsName["ALL"] = "ALL";
    MetricsName["INCOMING_BYTES"] = "IncomingBytes";
    MetricsName["INCOMING_RECORDS"] = "IncomingRecords";
    MetricsName["ITERATOR_AGE_MILLISECONDS"] = "IteratorAgeMilliseconds";
    MetricsName["OUTGOING_BYTES"] = "OutgoingBytes";
    MetricsName["OUTGOING_RECORDS"] = "OutgoingRecords";
    MetricsName["READ_PROVISIONED_THROUGHPUT_EXCEEDED"] = "ReadProvisionedThroughputExceeded";
    MetricsName["WRITE_PROVISIONED_THROUGHPUT_EXCEEDED"] = "WriteProvisionedThroughputExceeded";
})(MetricsName || (MetricsName = {}));
export var StreamStatus;
(function (StreamStatus) {
    StreamStatus["ACTIVE"] = "ACTIVE";
    StreamStatus["CREATING"] = "CREATING";
    StreamStatus["DELETING"] = "DELETING";
    StreamStatus["UPDATING"] = "UPDATING";
})(StreamStatus || (StreamStatus = {}));
export class ExpiredIteratorException extends __BaseException {
    constructor(opts) {
        super({
            name: "ExpiredIteratorException",
            $fault: "client",
            ...opts,
        });
        this.name = "ExpiredIteratorException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExpiredIteratorException.prototype);
    }
}
export class ExpiredNextTokenException extends __BaseException {
    constructor(opts) {
        super({
            name: "ExpiredNextTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "ExpiredNextTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExpiredNextTokenException.prototype);
    }
}
export class KMSAccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "KMSAccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSAccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSAccessDeniedException.prototype);
    }
}
export class KMSDisabledException extends __BaseException {
    constructor(opts) {
        super({
            name: "KMSDisabledException",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSDisabledException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSDisabledException.prototype);
    }
}
export class KMSInvalidStateException extends __BaseException {
    constructor(opts) {
        super({
            name: "KMSInvalidStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSInvalidStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSInvalidStateException.prototype);
    }
}
export class KMSNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "KMSNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSNotFoundException.prototype);
    }
}
export class KMSOptInRequired extends __BaseException {
    constructor(opts) {
        super({
            name: "KMSOptInRequired",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSOptInRequired";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSOptInRequired.prototype);
    }
}
export class KMSThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "KMSThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSThrottlingException.prototype);
    }
}
export class ProvisionedThroughputExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ProvisionedThroughputExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ProvisionedThroughputExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ProvisionedThroughputExceededException.prototype);
    }
}
export var ShardIteratorType;
(function (ShardIteratorType) {
    ShardIteratorType["AFTER_SEQUENCE_NUMBER"] = "AFTER_SEQUENCE_NUMBER";
    ShardIteratorType["AT_SEQUENCE_NUMBER"] = "AT_SEQUENCE_NUMBER";
    ShardIteratorType["AT_TIMESTAMP"] = "AT_TIMESTAMP";
    ShardIteratorType["LATEST"] = "LATEST";
    ShardIteratorType["TRIM_HORIZON"] = "TRIM_HORIZON";
})(ShardIteratorType || (ShardIteratorType = {}));
export class InternalFailureException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalFailureException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalFailureException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalFailureException.prototype);
    }
}
export var ShardFilterType;
(function (ShardFilterType) {
    ShardFilterType["AFTER_SHARD_ID"] = "AFTER_SHARD_ID";
    ShardFilterType["AT_LATEST"] = "AT_LATEST";
    ShardFilterType["AT_TIMESTAMP"] = "AT_TIMESTAMP";
    ShardFilterType["AT_TRIM_HORIZON"] = "AT_TRIM_HORIZON";
    ShardFilterType["FROM_TIMESTAMP"] = "FROM_TIMESTAMP";
    ShardFilterType["FROM_TRIM_HORIZON"] = "FROM_TRIM_HORIZON";
})(ShardFilterType || (ShardFilterType = {}));
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
export var SubscribeToShardEventStream;
(function (SubscribeToShardEventStream) {
    SubscribeToShardEventStream.visit = (value, visitor) => {
        if (value.SubscribeToShardEvent !== undefined)
            return visitor.SubscribeToShardEvent(value.SubscribeToShardEvent);
        if (value.ResourceNotFoundException !== undefined)
            return visitor.ResourceNotFoundException(value.ResourceNotFoundException);
        if (value.ResourceInUseException !== undefined)
            return visitor.ResourceInUseException(value.ResourceInUseException);
        if (value.KMSDisabledException !== undefined)
            return visitor.KMSDisabledException(value.KMSDisabledException);
        if (value.KMSInvalidStateException !== undefined)
            return visitor.KMSInvalidStateException(value.KMSInvalidStateException);
        if (value.KMSAccessDeniedException !== undefined)
            return visitor.KMSAccessDeniedException(value.KMSAccessDeniedException);
        if (value.KMSNotFoundException !== undefined)
            return visitor.KMSNotFoundException(value.KMSNotFoundException);
        if (value.KMSOptInRequired !== undefined)
            return visitor.KMSOptInRequired(value.KMSOptInRequired);
        if (value.KMSThrottlingException !== undefined)
            return visitor.KMSThrottlingException(value.KMSThrottlingException);
        if (value.InternalFailureException !== undefined)
            return visitor.InternalFailureException(value.InternalFailureException);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(SubscribeToShardEventStream || (SubscribeToShardEventStream = {}));
export var ScalingType;
(function (ScalingType) {
    ScalingType["UNIFORM_SCALING"] = "UNIFORM_SCALING";
})(ScalingType || (ScalingType = {}));
export const AddTagsToStreamInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const HashKeyRangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ChildShardFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ConsumerFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ConsumerDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StreamModeDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateStreamInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DecreaseStreamRetentionPeriodInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteStreamInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeregisterStreamConsumerInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeLimitsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeLimitsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStreamInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EnhancedMetricsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SequenceNumberRangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ShardFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StreamDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStreamOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStreamConsumerInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStreamConsumerOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStreamSummaryInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StreamDescriptionSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStreamSummaryOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DisableEnhancedMonitoringInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EnhancedMonitoringOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EnableEnhancedMonitoringInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetRecordsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const _RecordFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetRecordsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetShardIteratorInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetShardIteratorOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IncreaseStreamRetentionPeriodInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ShardFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListShardsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListShardsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStreamConsumersInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStreamConsumersOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStreamsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStreamsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTagsForStreamInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTagsForStreamOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MergeShardsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutRecordInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutRecordOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutRecordsRequestEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutRecordsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutRecordsResultEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutRecordsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegisterStreamConsumerInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegisterStreamConsumerOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RemoveTagsFromStreamInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SplitShardInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartStreamEncryptionInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopStreamEncryptionInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartingPositionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SubscribeToShardInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SubscribeToShardEventFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SubscribeToShardEventStreamFilterSensitiveLog = (obj) => {
    if (obj.SubscribeToShardEvent !== undefined)
        return { SubscribeToShardEvent: SubscribeToShardEventFilterSensitiveLog(obj.SubscribeToShardEvent) };
    if (obj.ResourceNotFoundException !== undefined)
        return { ResourceNotFoundException: obj.ResourceNotFoundException };
    if (obj.ResourceInUseException !== undefined)
        return { ResourceInUseException: obj.ResourceInUseException };
    if (obj.KMSDisabledException !== undefined)
        return { KMSDisabledException: obj.KMSDisabledException };
    if (obj.KMSInvalidStateException !== undefined)
        return { KMSInvalidStateException: obj.KMSInvalidStateException };
    if (obj.KMSAccessDeniedException !== undefined)
        return { KMSAccessDeniedException: obj.KMSAccessDeniedException };
    if (obj.KMSNotFoundException !== undefined)
        return { KMSNotFoundException: obj.KMSNotFoundException };
    if (obj.KMSOptInRequired !== undefined)
        return { KMSOptInRequired: obj.KMSOptInRequired };
    if (obj.KMSThrottlingException !== undefined)
        return { KMSThrottlingException: obj.KMSThrottlingException };
    if (obj.InternalFailureException !== undefined)
        return { InternalFailureException: obj.InternalFailureException };
    if (obj.$unknown !== undefined)
        return { [obj.$unknown[0]]: "UNKNOWN" };
};
export const SubscribeToShardOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EventStream && { EventStream: "STREAMING_CONTENT" }),
});
export const UpdateShardCountInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateShardCountOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateStreamModeInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
